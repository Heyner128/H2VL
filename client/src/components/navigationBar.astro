---
import DropdownNavigationLink from "./dropdownNavigationLink.astro";
import fetchApi from "@/lib/strapi";
import type ArticleType from "@/interfaces/articleType";
import sanitizeToURL from "@/lib/sanitize";

const articleTypes: string[] = await fetchApi<ArticleType[]>({
    endpoint: 'article-types',
    query: {
        populate: '*'
    },
    wrappedByKey: 'data',
}).then(articleTypes => articleTypes.map(at  => at.attributes.value));

console.log(import.meta.env.SITE, Astro.url.href);
---
<script>
    const navMenuClickHandler = (event: Event) => {
        event.preventDefault();
        const menuInput = document.querySelector("#menustate")
        if(menuInput !== null && "checked" in menuInput) menuInput.checked = !menuInput.checked
    }
    document.querySelector("#nav-menu-open")?.addEventListener('click', navMenuClickHandler);
    document.querySelector("#nav-menu-close")?.addEventListener('click', navMenuClickHandler);
</script>

<nav>
    <input aria-hidden="true" type="checkbox" id="menustate" class="hidden peer"/>
    <label for="menustate" class="group md:hidden" >
        <a
                id="nav-menu-open"
                role="button"
                href="#menustate"
                class="peer-checked:group-[]:hidden peer-target:group-[]:hidden"
        >
            <span aria-hidden="true" class="text-right font-bold text-3xl material-symbols-outlined">menu</span>
            <span class="sr-only">Ouvrir ménu</span>
        </a>
        <a
                id="nav-menu-close"
                role="button"
                href="#"
                class="hidden peer-checked:group-[]:block peer-target:group-[]:block"
        >
            <span aria-hidden="true" class="text-right text-3xl material-symbols-outlined">menu_open</span>
            <span class="sr-only">Fermer ménu</span>
        </a>
    </label>
    <ul class="max-md:hidden max-md:peer-checked:flex max-md:peer-target:flex max-md:absolute max-md:right-0 flex max-md:flex-col gap-10 max-md:bg-gradient-to-r max-md:from-blue-600 max-md:to-blue-400 max-md:h-dvh max-md:w-full max-md:text-center max-md:pt-3">
        <li class={import.meta.env.SITE + import.meta.env.BASE_URL === Astro.url.href?"font-bold underline underline-offset-[0.5rem]":""}><a href={`${import.meta.env.SITE + import.meta.env.BASE_URL}`}>Accueil</a></li>
        <li class={/association/.test(Astro.url.pathname)?"font-bold underline underline-offset-[0.5rem]":""}><a href={`${import.meta.env.SITE + import.meta.env.BASE_URL}association`}>L&apos;association</a></li>
        <DropdownNavigationLink>
            <span class={/nouveautes/.test(Astro.url.pathname)?"font-bold underline underline-offset-[0.5rem]":""} slot="main-text">Nouveautés</span>
            <ul slot="dropdown-elements" class="flex flex-col max-md:gap-5 gap-4">
                {
                    articleTypes.map(
                        articleType => <li class={new RegExp(sanitizeToURL(articleType)).test(Astro.url.pathname)?"font-bold underline underline-offset-[0.5rem]":""}>
                            <a href={`${import.meta.env.SITE + import.meta.env.BASE_URL}nouveautes/${sanitizeToURL(articleType)}`}>{articleType}</a>
                        </li>
                    )
                }
            </ul>
        </DropdownNavigationLink>
        <li class={/contact/.test(Astro.url.pathname)?"font-bold underline underline-offset-[0.5rem]":""}><a href={`${import.meta.env.SITE + import.meta.env.BASE_URL}contact`}>Contact</a></li>
    </ul>
</nav>